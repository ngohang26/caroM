{"ast":null,"code":"export const endHorizontal = (loc, letter, size, board) => {\n  let index = 1;\n  let count = 1;\n  let winSquares = [{\n    y: loc.y,\n    x: loc.x\n  }];\n  while (index <= 4 && loc.x + index < size.width) {\n    if (board[loc.y][loc.x + index] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y,\n        x: loc.x + index\n      });\n    } else break;\n    index++;\n  }\n  index = 1;\n  while (index <= 4 && loc.x - index >= 0) {\n    if (board[loc.y][loc.x - index] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y,\n        x: loc.x - index\n      });\n    } else break;\n    index++;\n  }\n  return count >= 5 ? winSquares : false;\n};\nexport const endVertical = (loc, letter, size, board) => {\n  let index = 1;\n  let count = 1;\n  let winSquares = [{\n    y: loc.y,\n    x: loc.x\n  }];\n  while (index <= 4 && loc.y + index < size.height) {\n    if (board[loc.y + index][loc.x] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y + index,\n        x: loc.x\n      });\n    } else break;\n    index++;\n  }\n  index = 1;\n  while (index <= 4 && loc.y - index >= 0) {\n    if (board[loc.y - index][loc.x] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y - index,\n        x: loc.x\n      });\n    } else break;\n    index++;\n  }\n  return count >= 5 ? winSquares : false;\n};\nexport const endMainDiagonal = (loc, letter, size, board) => {\n  let index = 1;\n  let count = 1;\n  let winSquares = [{\n    y: loc.y,\n    x: loc.x\n  }];\n  while (index <= 4 && loc.y + index < size.height && loc.x + index < size.width) {\n    if (board[loc.y + index][loc.x + index] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y + index,\n        x: loc.x + index\n      });\n    } else break;\n    index++;\n  }\n  index = 1;\n  while (index <= 4 && loc.y - index >= 0 && loc.x - index >= 0) {\n    if (board[loc.y - index][loc.x - index] === letter) {\n      winSquares.push({\n        y: loc.y - index,\n        x: loc.x - index\n      });\n      count++;\n    } else break;\n    index++;\n  }\n  return count >= 5 ? winSquares : false;\n};\nexport const endAntidiagonal = (loc, letter, size, board) => {\n  let index = 1;\n  let count = 1;\n  let winSquares = [{\n    y: loc.y,\n    x: loc.x\n  }];\n  while (index <= 4 && loc.y - index >= 0 && loc.x + index < size.width) {\n    if (board[loc.y - index][loc.x + index] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y - index,\n        x: loc.x + index\n      });\n    } else break;\n    index++;\n  }\n  index = 1;\n  while (index <= 4 && loc.y + index < size.height && loc.x - index >= 0) {\n    if (board[loc.y + index][loc.x - index] === letter) {\n      count++;\n      winSquares.push({\n        y: loc.y + index,\n        x: loc.x - index\n      });\n    } else break;\n    index++;\n  }\n  return count >= 5 ? winSquares : false;\n};","map":{"version":3,"names":["endHorizontal","loc","letter","size","board","index","count","winSquares","y","x","width","push","endVertical","height","endMainDiagonal","endAntidiagonal"],"sources":["D:/2023/caro-react/src/algorithms/algorithms.js"],"sourcesContent":["export const endHorizontal = (loc, letter, size, board) => {\r\n    let index = 1;\r\n    let count = 1;\r\n    let winSquares = [{y: loc.y, x: loc.x}];\r\n    while (index <= 4 && loc.x + index < size.width) {\r\n      if (board[loc.y][loc.x + index] === letter){\r\n        count++;\r\n        winSquares.push({y: loc.y, x: loc.x + index})\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    index = 1;\r\n    while (index <= 4 && loc.x - index >= 0) {\r\n      if (board[loc.y][loc.x - index] === letter){\r\n        count++;\r\n        winSquares.push({y: loc.y, x: loc.x - index})\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    return count >= 5 ? winSquares : false ;\r\n}\r\nexport const endVertical = (loc, letter, size, board) => {\r\n    let index = 1;\r\n    let count = 1;\r\n    let winSquares = [{y: loc.y, x: loc.x}];\r\n    while (index <= 4 && loc.y + index < size.height) {\r\n      if (board[loc.y + index][loc.x] === letter){\r\n        count++;\r\n        winSquares.push({y: loc.y + index, x: loc.x})\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    index = 1;\r\n    while (index <= 4 && loc.y - index >= 0) {\r\n      if (board[loc.y - index][loc.x] === letter){\r\n        count++;\r\n        winSquares.push({y: loc.y - index, x: loc.x})\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    return count >= 5 ? winSquares : false ;\r\n}\r\nexport const endMainDiagonal = (loc, letter, size, board) => {\r\n    let index = 1;\r\n    let count = 1;\r\n    let winSquares = [{y: loc.y, x: loc.x}];\r\n\r\n    while (index <= 4 && loc.y + index < size.height && loc.x + index < size.width) {\r\n      if (board[loc.y + index][loc.x + index] === letter){\r\n        count++;\r\n        winSquares.push({y: loc.y + index, x: loc.x + index})\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    index = 1;\r\n    while (index <= 4 && loc.y - index >= 0 && loc.x - index >= 0) {\r\n      if (board[loc.y - index][loc.x - index] === letter){\r\n        winSquares.push({y: loc.y - index, x: loc.x - index})\r\n        count++;\r\n      }\r\n      else break;\r\n      index++;\r\n    }\r\n    return count >= 5 ? winSquares : false ;\r\n}\r\nexport const endAntidiagonal = (loc, letter, size, board) => {\r\n    let index = 1;\r\n    let count = 1;\r\n    let winSquares = [{y: loc.y, x: loc.x}];\r\n\r\n    while (index <= 4 && loc.y - index >= 0 && loc.x + index < size.width) {\r\n        if (board[loc.y - index][loc.x + index] === letter){\r\n            count++;\r\n            winSquares.push({y: loc.y - index, x: loc.x + index})\r\n        }\r\n        else break;\r\n            index++;\r\n    }\r\n    index = 1;\r\n    while (index <= 4 && loc.y + index < size.height && loc.x - index >= 0) {\r\n        if (board[loc.y + index][loc.x - index] === letter){\r\n            count++;\r\n            winSquares.push({y: loc.y + index, x: loc.x - index})\r\n        }\r\n        else break;\r\n            index++;\r\n    }\r\n    return count >= 5 ? winSquares : false ;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACvD,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,UAAU,GAAG,CAAC;IAACC,CAAC,EAAEP,GAAG,CAACO,CAAC;IAAEC,CAAC,EAAER,GAAG,CAACQ;EAAC,CAAC,CAAC;EACvC,OAAOJ,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,GAAGF,IAAI,CAACO,KAAK,EAAE;IAC/C,IAAIN,KAAK,CAACH,GAAG,CAACO,CAAC,CAAC,CAACP,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MACzCI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC;QAAEC,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;IAC/C,CAAC,MACI;IACLA,KAAK,EAAE;EACT;EACAA,KAAK,GAAG,CAAC;EACT,OAAOA,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,IAAI,CAAC,EAAE;IACvC,IAAID,KAAK,CAACH,GAAG,CAACO,CAAC,CAAC,CAACP,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MACzCI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC;QAAEC,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;IAC/C,CAAC,MACI;IACLA,KAAK,EAAE;EACT;EACA,OAAOC,KAAK,IAAI,CAAC,GAAGC,UAAU,GAAG,KAAK;AAC1C,CAAC;AACD,OAAO,MAAMK,WAAW,GAAGA,CAACX,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACrD,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,UAAU,GAAG,CAAC;IAACC,CAAC,EAAEP,GAAG,CAACO,CAAC;IAAEC,CAAC,EAAER,GAAG,CAACQ;EAAC,CAAC,CAAC;EACvC,OAAOJ,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,GAAGF,IAAI,CAACU,MAAM,EAAE;IAChD,IAAIT,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,CAAC,KAAKP,MAAM,EAAC;MACzCI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ;MAAC,CAAC,CAAC;IAC/C,CAAC,MACI;IACLJ,KAAK,EAAE;EACT;EACAA,KAAK,GAAG,CAAC;EACT,OAAOA,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,IAAI,CAAC,EAAE;IACvC,IAAID,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,CAAC,KAAKP,MAAM,EAAC;MACzCI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ;MAAC,CAAC,CAAC;IAC/C,CAAC,MACI;IACLJ,KAAK,EAAE;EACT;EACA,OAAOC,KAAK,IAAI,CAAC,GAAGC,UAAU,GAAG,KAAK;AAC1C,CAAC;AACD,OAAO,MAAMO,eAAe,GAAGA,CAACb,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACzD,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,UAAU,GAAG,CAAC;IAACC,CAAC,EAAEP,GAAG,CAACO,CAAC;IAAEC,CAAC,EAAER,GAAG,CAACQ;EAAC,CAAC,CAAC;EAEvC,OAAOJ,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,GAAGF,IAAI,CAACU,MAAM,IAAIZ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,GAAGF,IAAI,CAACO,KAAK,EAAE;IAC9E,IAAIN,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MACjDI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;IACvD,CAAC,MACI;IACLA,KAAK,EAAE;EACT;EACAA,KAAK,GAAG,CAAC;EACT,OAAOA,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,IAAI,CAAC,EAAE;IAC7D,IAAID,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MACjDK,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;MACrDC,KAAK,EAAE;IACT,CAAC,MACI;IACLD,KAAK,EAAE;EACT;EACA,OAAOC,KAAK,IAAI,CAAC,GAAGC,UAAU,GAAG,KAAK;AAC1C,CAAC;AACD,OAAO,MAAMQ,eAAe,GAAGA,CAACd,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACzD,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,UAAU,GAAG,CAAC;IAACC,CAAC,EAAEP,GAAG,CAACO,CAAC;IAAEC,CAAC,EAAER,GAAG,CAACQ;EAAC,CAAC,CAAC;EAEvC,OAAOJ,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,GAAGF,IAAI,CAACO,KAAK,EAAE;IACnE,IAAIN,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MAC/CI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;IACzD,CAAC,MACI;IACDA,KAAK,EAAE;EACf;EACAA,KAAK,GAAG,CAAC;EACT,OAAOA,KAAK,IAAI,CAAC,IAAIJ,GAAG,CAACO,CAAC,GAAGH,KAAK,GAAGF,IAAI,CAACU,MAAM,IAAIZ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,IAAI,CAAC,EAAE;IACpE,IAAID,KAAK,CAACH,GAAG,CAACO,CAAC,GAAGH,KAAK,CAAC,CAACJ,GAAG,CAACQ,CAAC,GAAGJ,KAAK,CAAC,KAAKH,MAAM,EAAC;MAC/CI,KAAK,EAAE;MACPC,UAAU,CAACI,IAAI,CAAC;QAACH,CAAC,EAAEP,GAAG,CAACO,CAAC,GAAGH,KAAK;QAAEI,CAAC,EAAER,GAAG,CAACQ,CAAC,GAAGJ;MAAK,CAAC,CAAC;IACzD,CAAC,MACI;IACDA,KAAK,EAAE;EACf;EACA,OAAOC,KAAK,IAAI,CAAC,GAAGC,UAAU,GAAG,KAAK;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}